blocstagram/MediaFullScreenViewController.m
@@ -11,7 +11,7 @@
#import "ShareUtility.h"

- @interface MediaFullScreenViewController () <UIScrollViewDelegate>
+ @interface MediaFullScreenViewController () <UIScrollViewDelegate, UIGestureRecognizerDelegate>

@property (nonatomic, strong) UITapGestureRecognizer *tap;
@property (nonatomic, strong) UITapGestureRecognizer *doubleTap;

@@ -210,4 +211,16 @@
    }
}

+ - (BOOL) gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer{
+    return true;
+}

@end ï‚œ



blocstagram/CropImageViewController.m
@@ -65,6 +65,7 @@
    self.bottomView.alpha = 0.5;
    [self.view addSubview:self.topView];
    [self.view addSubview:self.bottomView];
+    [self.scrollView removeGestureRecognizer:self.tap];
}

 - (void) viewWillLayoutSubviews {



blocstagram/MediaFullScreenViewController.h
@@ -15,6 +15,7 @@
@property (nonatomic, strong) UIScrollView *scrollView;
@property (nonatomic, strong) UIImageView *imageView;
@property (nonatomic, strong) Media *media;
+ @property (nonatomic, strong) UITapGestureRecognizer *tap;

 - (instancetype) initWithMedia:(Media *)media;



blocstagram/MediaFullScreenViewController.m
@@ -13,7 +13,7 @@

@interface MediaFullScreenViewController () <UIScrollViewDelegate, UIGestureRecognizerDelegate>

-@property (nonatomic, strong) UITapGestureRecognizer *tap;
+
@property (nonatomic, strong) UITapGestureRecognizer *doubleTap;
@property (nonatomic, strong) UIButton *shareButton;
@property (nonatomic, strong) UITapGestureRecognizer *tapBehind;
@@ -148,8 +148,8 @@

    
    if (isPhone == NO) {
-       [self.view.window setBackgroundColor:[UIColor blueColor]];
-       [self.view.window addGestureRecognizer:self.tapBehind];
+       [[[[UIApplication sharedApplication] delegate] window] setBackgroundColor:[UIColor blueColor]];
+       [[[[UIApplication sharedApplication] delegate] window] addGestureRecognizer:self.tapBehind];
        self.tapBehind.delegate = self;
    }
}
@@ -168,9 +168,9 @@
    if (sender.state == UIGestureRecognizerStateEnded) {
        NSLog(@"Tap behind fired");
        CGPoint location = [sender locationInView:nil]; // Passing nil gives us coordinates in the window
-       CGPoint locationInVC = [self.presentedViewController.view convertPoint:location fromView:self.view.window];
+       CGPoint locationInVC = [self.view convertPoint:location fromView:self.view.window];
        
-       if ([self.presentedViewController.view pointInside:locationInVC withEvent:nil] == NO) {
+       if ([self.view pointInside:locationInVC withEvent:nil] == NO) {
            // The tap was outside the VC's view
            
            if (self.presentingViewController) {
